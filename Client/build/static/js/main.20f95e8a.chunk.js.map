{"version":3,"sources":["Components/nav.js","data/project.js","Components/projects.js","Components/footer.js","Components/header.js","Pages/home.js","Pages/contact.js","Pages/about.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","Navbar","bg","variant","to","Brand","Nav","className","Link","href","Form","inline","FormControl","type","placeholder","Button","data","name","deployed","github","img","Projects","state","this","setState","CardGroup","length","map","project","index","Card","key","Img","src","Body","Title","Footer","target","Text","Component","Header","Home","About","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.20f95e8a.chunk.js","sourcesContent":["import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button'\nimport { Router, Link } from 'react-router-dom';\nfunction NavBar(props) {\n  return (\n    <>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Link to=\"/\"><Navbar.Brand>Navbar</Navbar.Brand></Link>\n        <Nav className=\"mr-auto\">\n          <Link to=\"/\"><Nav.Link href=\"#home\">Home</Nav.Link></Link>\n          <Link to=\"/projects\"><Nav.Link href=\"#features\">Projects</Nav.Link></Link>\n        </Nav>\n        <Form inline>\n          <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n          <Button variant=\"outline-info\">Search</Button>\n        </Form>\n      </Navbar>\n    </>\n  );\n}\nexport default NavBar;","const data = [\n    {\n        name: \"Simple B2B Sales Tool\",\n        deployed: \"https://alexiachalita.github.io/project1/\",\n        github: \"https://github.com/alexiachalita/project1\",\n        img: \"https://alexiachalita.github.io/PortfolioV.3/image1.jpg\"\n    },\n    {\n        name: \"Weather App\",\n        deployed: \"https://alexiachalita.github.io/weatherapp/\",\n        github: \"https://github.com/alexiachalita/weatherapp\",\n        img: \"https://alexiachalita.github.io/PortfolioV.3/image10.jpg\"\n    },\n    {\n        name: \"Cat Quiz\",\n        deployed: \"https://alexiachalita.github.io/codingquiz/\",\n        github: \"https://github.com/alexiachalita/codingquiz\",\n        img: \"https://alexiachalita.github.io/PortfolioV.3/image3.jpg\"\n    },\n    {\n        name: \"Password Generator\",\n        deployed: \"https://alexiachalita.github.io/passwordgenerator/\",\n        github: \"https://github.com/alexiachalita/passwordgenerator\",\n        img: \"https://alexiachalita.github.io/PortfolioV.3/password.png\"\n    }\n];\n\n\nexport default data;","import React, { Component } from 'react';\nimport { Card, CardGroup, Button } from 'react-bootstrap';\nimport data from \"../data/project\";\n\n\nclass Projects extends Component {\n  state = {\n    data: []\n  };\n\n  componentDidMount(){\n    this.setState({\n      data\n    });\n  }\n\n  render() {\n      return (\n      <CardGroup>\n        {this.state.data.length > 0 ? (\n          this.state.data.map((project, index) => (\n            <Card key={index}>\n          <Card.Img variant=\"top\" src={project.img} />\n          <Card.Body>\n          <Card.Title>{project.name}</Card.Title>\n          </Card.Body>\n          <Card.Footer>\n         <a href={project.deployed} target=\"_blank\" className=\"btn\">Live Project</a>\n         <a href={project.github} target=\"_blank\" className=\"btn\">Github Repo</a>          </Card.Footer>\n        </Card>\n          ))\n          ):(\n        <Card>\n          <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\n          <Card.Body>\n            <Card.Title>Card title</Card.Title>\n            <Card.Text>\n              This is a wider card with supporting text below as a natural lead-in to\n              additional content. This content is a little bit longer.\n            </Card.Text>\n          </Card.Body>\n          <Card.Footer>\n            <small className=\"text-muted\">Last updated 3 mins ago</small>\n          </Card.Footer>\n        </Card>\n      )}\n      </CardGroup>\n      );\n  }\n\n}\nexport default Projects;","import React from 'react';\nimport {Card, Button} from 'react-bootstrap';\n\nfunction Footer(props) {\n  return (\n    <Card>\n  <Card.Header>Get in Touch</Card.Header>\n  <Card.Body>\n    <Card.Title>achalita@callutheran.edu</Card.Title>\n    <Card.Text>\n    </Card.Text>\n    <Button variant=\"primary\" href=\"https://www.linkedin.com/in/alexia-chalita-42810071/\" target=\"_blank\">LinkedIn</Button>\n    <Button variant=\"primary\" href=\"mailto:achalita@callutheran.edu\">Email</Button>\n  </Card.Body>\n</Card>\n  );\n}\nexport default Footer;","import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button'\n\nfunction Header(props) {\n  return (\n    <Jumbotron>\n    <h1>Hello, I'm Alexia.</h1>\n    <p>\n      This is my story...\n    </p>\n    <p>\n      <Button variant=\"primary\">Learn more</Button>\n    </p>\n  </Jumbotron>\n  );\n}\nexport default Header;","\nimport React, { Component } from 'react';\n\n// import { CenteredHeader } from './App.js'\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n          <p>\n          Alexia is a San Diego native who loves spending time with her cats (and dog) and working. She has been working in marketing for 5+ years and specializes in all things digital. She hopes to learn new skills during her time at the \"coding bootcamp.\" During her free time, she likes to go outdoors, travel, and learn new skills!\n          </p> \n      </div>\n  )\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\n// import styled from 'styled-components';\n\n// import { CenteredHeader } from './App.js'\n// import { PortButton } from './Code.js'\n\n// const FormDiv = styled.div`\n//   margin: 0 auto;\n//   width: 50%;\n// `\n\n// const FormLabel = styled.label`\n//   display: block;\n// `\n\n// const FormInput = styled.input`\n//   width: 100%;\n// `\n\n// const CommentInput = styled.textarea`\n//   width: 100%;\n//   height: 6em;\n// `\n\n// const EmailMe = styled.p`\n//   text-align: center;\n//   padding: 4%;\n// `\n\nclass Contact extends Component {\n\n  render() {\n    return (\n      <div>\n        {/* <CenteredHeader>Get in touch with me!</CenteredHeader> */}\n\n        {/* <FormDiv>\n          <form action=\"https://formspree.io/sophiaciocca@gmail.com\" method=\"POST\" id=\"contactform\">\n            <div>\n              <FormLabel>Name:</FormLabel>\n              <FormInput type=\"text\" name=\"name\" />\n            </div>\n            <div>\n              <FormLabel>Email:</FormLabel>\n              <FormInput type=\"text\" name=\"_replyto\" />\n            </div>\n            <div>\n              <FormLabel>Comment:</FormLabel>\n              <CommentInput name=\"comment\" />\n            </div>\n            <button type=\"submit\">Submit</button>\n          </form>\n        </FormDiv> */}\n\n        {/* <hr/> */}\n        {/* <CenteredHeader><PortButton href=\"https://drive.google.com/file/d/0B-Wn-csD32OpVmUyVXFVa0JJakE/view\" target=\"_blank\">Download My Resume</PortButton></CenteredHeader> */}\n      </div>\n    );\n  }\n}\n\nexport default Contact;","import React from 'react';\n\nfunction About() {\n    return (\n        <div>\n            <p>\n            Alexia is a San Diego native who loves spending time with her cats (and dog) and working. She has been working in marketing for 5+ years and specializes in all things digital. She hopes to learn new skills during her time at the \"coding bootcamp.\" During her free time, she likes to go outdoors, travel, and learn new skills!\n            </p> \n        </div>\n    )\n}\n\nexport default About;","import React, {  Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n// import Wrapper from 'react-bootstrap/Wrapper';\nimport { Jumbotron, Col }  from 'react-bootstrap';\nimport NavBar from './Components/nav';\nimport Projects from './Components/projects';\nimport Footer from './Components/footer';\nimport Header from './Components/header';\n///import pages\n/// import components\n// import App from './containers/App'\nimport Home from './Pages/home'\nimport About from './Pages/about';\n// import About from './containers/About'\nimport Gallery from './Pages/gallery'\nimport Contact from './Pages/contact'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <NavBar />\n          <Route exact path=\"/\">\n            <Home />  \n          </Route> \n          <Route path=\"/projects\">\n            <Projects />\n          </Route>\n          <Footer />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// export default (\n//     <Router history={hashHistory}>\n//       <Route path='/' component={App}>\n//         <IndexRoute component={Home}/>\n//         <Route path='/About' component={About} />\n//         <Route path='/Gallery' component={Gallery} />\n//         <Route path='/contact' component={Contact} />\n//       </Route>\n//     </Router>\n\n// );\n\n\n// import React, { Component } from 'react';\n// import styled from 'styled-components';\n\n// import Header from './Header.js'\n// import Footer from './Footer.js'\n\n// export const ColorScheme = {\n//   primary: 'red',\n//   secondary: 'blue',\n//   third: 'purple',\n//   fourth: 'goldenrod'\n// }\n\n// const AppDiv = styled.div`\n//   display: flex;\n//   min-height: 100vh;\n//   flex-direction: column;\n//   font-size: 1.15em;\n// `;\n\n// export const CenteredHeader = styled.h4`\n//   text-align: center;\n//   margin-bottom: 1.25em;\n// `\n\n\n// const ContainerDiv = styled.div`\n//   margin: 1% 17% 3% 17%;\n//   flex: 1;\n//   font-family: 'Open Sans', sans-serif;\n// `\n\n// class App extends Component {\n//   render() {\n//     return (\n//       <AppDiv>\n//         <Header />\n//         <ContainerDiv>\n//           {this.props.children}\n//         </ContainerDiv>\n//         <Footer />\n//       </AppDiv>\n//     );\n//   }\n// }\n\n// export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}